version: '3.3'
services:
#  workflow-frontend:
#    image: node:16
#    ports:
#      - "3000:3000"
#    working_dir: /src
#    networks:
#      - workflow-network
#    environment:
#      HOST: 0.0.0.0
#    command: bash -c "npm install -f && npm start"
#    volumes:
#      - "./workflow-frontend:/src"
#      - "/src/node_modules"

  workflow-api-gateway:
    image: node:16
    ports:
      - "4000:4000"
    working_dir: /src
    restart:
        always
    networks:
      - workflow-network
    command: bash -c "npm install -f && npm start"
    volumes:
      - "./workflow-api-gateway:/src"
      - "/src/node_modules"

  workflow-api-users:
    image: node:16
    ports:
      - "4001:4001"
    working_dir: /src
    restart:
        always
    networks:
      - workflow-network
    environment:
      DATABASE_HOST: workflow-db-users
      DATABASE_PORT: 5432
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: root
      DATABASE_NAME: users
    command: bash -c "npm install -f && npm start"
    depends_on:
        - workflow-db-users
    volumes:
      - "./workflow-api-users:/src"
      - "/src/node_modules"

#  workflow-db-users:
#    image: postgres:alpine
#    restart: always
#    environment:
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: root
#      POSTGRES_DB: users
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./workflow-api-users/_data/postgres:/var/lib/postgresql/data
  workflow-db-users:
    image: kartoza/postgis:14-3.1
    volumes:
      - ./workflow-db-users:/var/lib/postgresql
      - ./workflow-db-users_data:/var/lib/postgresql/data
    ports:
      - 25432:5432
    restart: on-failure
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASS=root
      - POSTGRES_DB=users
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    networks:
      - workflow-network

  workflow-pgadmin-users:
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./workflow-pgadmin-users:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - workflow-network

#        For backend:
#        - AWS_ACCESS_KEY_ID=minio
#        - AWS_SECRET_ACCESS_KEY=minio123
#        - AWS_BUCKET=bucket
#        - AWS_ENDPOINT=http://minio:9000




  minio:
    image: docker.io/bitnami/minio:2022
    ports:
      - '9001:9001'
    restart:
      on-failure
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_DEFAULT_BUCKETS=bucket:policy
    networks:
      - workflow-network

  redis:
    container_name: redis
    hostname: redis
    image: redis
    volumes:
      - ./redis-data:/data
    networks:
      - workflow-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - workflow-network


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    restart: unless-stopped
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log-data:/var/lib/zookeeper/log
    networks:
      - workflow-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      MAX_POLL_INTERVAL_MS_CONFIG: 3600000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - workflow-network


  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021


networks:
  workflow-network:
    driver: bridge

volumes:
  workflow-api-gateway:
  workflow-api-users:
  workflow-db-users:
  workflow-pgadmin-users:
  minio_data:
  kafka-data:
  zk-data:
  zk-log-data: