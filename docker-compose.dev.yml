version: '3.3'
services:
  workflow-frontend:
    image: node:16
    ports:
      - "3000:3000"
    working_dir: /src
    networks:
      - app-network
    environment:
      HOST: 0.0.0.0
    command: bash -c "npm install -f && npm run dev"
    volumes:
      - "./workflow-frontend:/src"
      - "/src/node_modules"

  workflow-api-gateway:
    image: node:16
    ports:
      - "4000:4000"
    working_dir: /src
    networks:
      - app-network
    command: bash -c "npm install -f && npm run prepare && npm start"
    depends_on:
      - workflow-api-users
      - workflow-api-auth
      - kafka
    volumes:
      - "./workflow-api-gateway:/src"

  #////////////////////////////////////////////////////////////////////////////////////////
  workflow-api-users:
    image: node:16
    ports:
      - "4001:4001"
    working_dir: /src
    networks:
      - app-network
    environment:
      DATABASE_HOST: workflow-db-users
      DATABASE_PORT: 5432
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: root
      DATABASE_NAME: users
    command: bash -c "npm install -f && npm run prepare && npm start"
    depends_on:
      - workflow-db-users
      - kafka
    volumes:
      - "./workflow-api-users:/src"

  workflow-db-users:
    image: kartoza/postgis:14-3.1
    volumes:
      - ./volumes/users/workflow-db-users:/var/lib/postgresql
      - ./volumes/users/workflow-db-users_data:/var/lib/postgresql/data
    ports:
      - "25432:5432"
    restart: on-failure
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASS=root
      - POSTGRES_DB=users
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    networks:
      - app-network

  workflow-pgadmin-users:
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./volumes/users/workflow-pgadmin-users:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network
  #////////////////////////////////////////////////////////////////////////////////////////

  #////////////////////////////////////////////////////////////////////////////////////////
  workflow-api-auth:
    image: node:16
    ports:
      - "4002:4002"
    working_dir: /src
    networks:
      - app-network
    command: bash -c "npm install -f && npm run prepare && npm start"
    depends_on:
      - kafka
    volumes:
      - "./workflow-api-auth:/src"
  #////////////////////////////////////////////////////////////////////////////////////////

  #////////////////////////////////////////////////////////////////////////////////////////
  workflow-api-mailer:
    image: node:16
    ports:
      - "4003:4003"
    working_dir: /src
    networks:
      - app-network
    command: bash -c "npm install -f && npm run prepare && npm start"
    environment:
      - SMTP_HOST=smtp.google.com
      - SMTP_PORT=465
      - SMTP_SECURE=true
      - SMTP_AUTH_USER=roman.stasenok76@gmail.com
      - SMTP_AUTH_ACCESS_URL=https://oauth2.googleapis.com/token
      - SMTP_AUTH_ACCESS_TOKEN=ya29.a0AeTM1ienOaVGM4j32w2KZYckiBAWj3Xy75inlj3LgEQW9uM7yNeGJBiILFCKjbT_RPVHIwlLbIiPuhxcRw3aKR2hNAzkFKGuJioOhEZUjmoqAd9rbgJnme2HZmWlQN3C_38TZtXF6vXIY1Jb1xU7M3VjeBdeaCgYKAT4SARISFQHWtWOmpghsqdfHCpHxab4XzjZl4w0163
      - SMTP_AUTH_CLIENT_ID=955289855748-ftu17bhd5foo20jm9h5b2hgrq53ttmb7.apps.googleusercontent.com
      - SMTP_AUTH_CLIENT_SECRET=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
      - SMTP_AUTH_REFRESH_TOKEN=1//04eLSexnFh76OCgYIARAAGAQSNwF-L9Ir9gRyJMpkn7FUH2PDwUANLHTbCJJza-YEzV9ztiML1W5q5xTAA1B0azLKV3GKvbG1H-E
    depends_on:
      - kafka
    volumes:
      - "./workflow-api-mailer:/src"
  #////////////////////////////////////////////////////////////////////////////////////////

  #////////////////////////////////////////////////////////////////////////////////////////
  workflow-api-company:
    image: node:16
    ports:
      - "4004:4004"
    working_dir: /src
    networks:
      - app-network
    environment:
      DATABASE_HOST: workflow-db-company
      DATABASE_PORT: 5432
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: root
      DATABASE_NAME: company
    command: bash -c "npm install -f && npm run prepare && npm start"
    depends_on:
      - kafka
    volumes:
      - "./workflow-api-company:/src"

  workflow-db-company:
    image: kartoza/postgis:14-3.1
    volumes:
      - ./volumes/company/workflow-db-company:/var/lib/postgresql
      - ./volumes/company/workflow-db-company_data:/var/lib/postgresql/data
    ports:
      - "25433:5432"
    restart: on-failure
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASS=root
      - POSTGRES_DB=company
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    networks:
      - app-network

  workflow-pgadmin-company:
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./volumes/company/workflow-pgadmin-company:/var/lib/pgadmin
    ports:
      - "5051:80"
    networks:
      - app-network
  #////////////////////////////////////////////////////////////////////////////////////////
  #        For backend:
  #        - AWS_ACCESS_KEY_ID=minio
  #        - AWS_SECRET_ACCESS_KEY=minio123
  #        - AWS_BUCKET=bucket
  #        - AWS_ENDPOINT=http://minio:9000

  #////////////////////////////////////////////////////////////////////////////////////////
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    restart: unless-stopped
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-log-data:/var/lib/zookeeper/log
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      MAX_POLL_INTERVAL_MS_CONFIG: 3600000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - app-network
  #////////////////////////////////////////////////////////////////////////////////////////

networks:
  app-network:
    driver: bridge
  redis_network:
    driver: bridge

volumes:
  workflow-frontend:

  #backend
  workflow-api-users:
  workflow-api-gateway:
  workflow-api-auth:
  workflow-api-mailer:
  workflow-api-company:

  kafka-data:
  zk-data:
  zk-log-data: